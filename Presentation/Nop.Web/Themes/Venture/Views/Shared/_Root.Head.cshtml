@using Nop.Core
@using Nop.Core.Configuration
@using Nop.Core.Events
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo
@using Nop.Services.Events
@using Nop.Services.Localization
@using Nop.Services.Configuration;
@using Nop.Services.Security;
@using Nop.Web.Framework.Events

@inject CommonSettings commonSettings
@inject IEventPublisher eventPublisher
@inject IPermissionService permissionService
@inject IWorkContext workContext
@inject IThemeContext themeContext
@inject SeoSettings seoSettings
@inject AppSettings appSettings
@inject IStoreContext storeContext
@inject ISettingService settingService
@inject Nop.Services.Localization.ILanguageService languageService

@{
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.countryselect.js");
    var displayMiniProfiler = appSettings.CommonConfig.MiniProfilerEnabled && await permissionService.AuthorizeAsync(StandardPermissionProvider.AccessProfiling);

    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.ajaxcart.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/js/public.common.js");
    //when jQuery migrate script logging is active you will see the log in the browser console

    var iosFixFilePath = "~/Plugins/SevenSpikes.Core/Scripts/iOS-12-array-reverse-fix.min.js";
    var iosFixContentFilePath = CommonHelper.DefaultFileProvider.MapPath(iosFixFilePath);

    if (System.IO.File.Exists(iosFixContentFilePath))
    {
        Html.AppendScriptParts(ResourceLocation.Footer, iosFixFilePath);
    }

    if (commonSettings.JqueryMigrateScriptLoggingActive)
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.js");
    }
    else
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-migrate/jquery-migrate.min.js");
    }
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-ui-dist/jquery-ui.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery-validation/jquery.validate.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/jquery/jquery.min.js");

    //custom tag(s);

    if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
    {
        Html.AppendHeadCustomParts(seoSettings.CustomHeadTags);
    }

    var storeId = (await storeContext.GetCurrentStoreAsync()).Id;
    var themeColor = await settingService.GetSettingByKeyAsync("venturethemesettings.themecolor", "dark-theme", storeId, true);

    var currentPageClass = (await (await Html.PartialAsync("_CurrentPageClass")).RenderHtmlContentAsync()).Trim();

    await eventPublisher.PublishAsync(new PageRenderingEvent(this.Html));
}
<!DOCTYPE html>
<html lang="@languageService.GetTwoLetterIsoLanguageName(await workContext.GetWorkingLanguageAsync())" @(await this.ShouldUseRtlThemeAsync() ? Html.Raw(" dir=\"rtl\"") : null) @Html.NopPageCssClasses()>
<head>
    <title>@Html.NopTitle()</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta name="description" content="@(Html.NopMetaDescription())" />
    <meta name="keywords" content="@(Html.NopMetaKeywords())" />
    <meta name="generator" content="nopCommerce" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0" />
    <link rel="preload" as="font" href="@Url.Content($"~/Themes/{await themeContext.GetWorkingThemeNameAsync()}/Content/fonts/venture-font.woff")" crossorigin>
    <link href="https://fonts.googleapis.com/css?family=Fjalla+One&amp;subset=latin-ext&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Lato&amp;subset=latin-ext&display=swap" rel="stylesheet">
    @Html.NopHeadCustom()
    @*This is used so that themes can inject content into the header*@
    @await Html.PartialAsync("Head")
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeadHtmlTag })
    @await Component.InvokeAsync("Widget", new { widgetZone = "head_html_tag_after_css_files_venture" })
    @Html.NopCssFiles(ResourceLocation.Head)
    @Html.NopScripts(ResourceLocation.Head)
    @Html.NopCanonicalUrls()
    @await Component.InvokeAsync("NewsRssHeaderLink")
    @await Component.InvokeAsync("BlogRssHeaderLink")
    @*Insert favicon and app icons head code*@
    @await Component.InvokeAsync("Favicon")
    @if (displayMiniProfiler)
    {
        <mini-profiler />
    }
    @Html.NopInlineScripts(ResourceLocation.Head)
    <!--Powered by nopCommerce - https://www.nopCommerce.com-->
</head>
<body class="@currentPageClass @themeColor">
    <div class="page-loader">
        <div class="loader"></div>
    </div>
    @RenderBody()
    @Html.NopCssFiles(ResourceLocation.Footer)
    @Html.NopScripts(ResourceLocation.Footer)
    @Html.NopInlineScripts(ResourceLocation.Footer)
    <div class="scroll-back-button" id="goToTop"></div>
</body>
</html>